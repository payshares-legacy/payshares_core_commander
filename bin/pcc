#!/usr/bin/env ruby

require 'payshares_core_commander'
require 'slop'

def run
  $opts = Slop.parse do
    banner 'Usage: pcc -r RECIPE'
    
    on 'payshares-core-bin', 'a path to a payshares-core executable (default to `which payshares-core`)', argument: true
    on 'r', 'recipe', 'a recipe file', argument: true #, required: true
  end

  recipe    = load_recipe
  commander = make_commander
  process   = commander.make_process

  #run recipe
  transactor = PaysharesCoreCommander::Transactor.new(process)
  process.run
  process.wait_for_ready
  transactor.run_recipe recipe
  transactor.close_ledger

  output_results(process)
end


def make_commander
  payshares_core_bin = $opts[:"payshares-core-bin"]

  if payshares_core_bin.blank?
    search = `which payshares-core`.strip

    if $?.success?
      payshares_core_bin = search
    else
      $stderr.puts "Could not find a `payshares-core` binary, please use --payshares-core-bin to specify"
      exit 1
    end
  end

  PaysharesCoreCommander::Commander.new(payshares_core_bin).tap do |c|
    c.cleanup_at_exit!
  end
end

def load_recipe
  recipe = $opts[:recipe]

  if recipe.blank?
    $stderr.puts $opts
    exit 1
  end

  unless File.exist?(recipe)
    $stderr.puts "not found: #{recipe}"
    exit 1
  end

  recipe
end

def output_results(process)
  $stdout.puts process.dump_database
end

run

 